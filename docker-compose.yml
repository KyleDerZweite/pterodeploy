version: '3.8'
services:
  frontend:
    build: 
      context: .
      dockerfile: ./frontend/Dockerfile
    ports:
      - "${FRONTEND_PORT:-80}:80"
    depends_on:
      - backend
    networks:
      - pterodeploy

  backend:
    build: 
      context: .
      dockerfile: ./backend/Dockerfile
    ports:
      - "${BACKEND_PORT:-3001}:3001"
    environment:
      - DATABASE_URL=file:/data/pterodeploy.db
      - REDIS_URL=redis://redis:6379
    volumes:
      - db_data:/data
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - pterodeploy

  redis:
    image: docker.io/library/redis:7-alpine
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
    networks:
      - pterodeploy

volumes:
  db_data:
  redis_data:

networks:
  pterodeploy:
    driver: bridge